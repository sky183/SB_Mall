<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sb.mall.member.dao.MemberDao">

	<insert id="insert"
		parameterType="com.sb.mall.member.model.MemberInfo"
		useGeneratedKeys="true" keyProperty="userSeq">
		insert into MemberInfo
		(userId,userPw,userName,address1,address2,zipCode,phone,birth,gender)
		values
		(#{userId},#{userPw},#{userName},#{address1},#{address2},#{zipCode},#{phone},#{birth},#{gender})
	</insert>


	<select id="selectById"
		resultType="com.sb.mall.member.model.MemberInfo">
		select * from MemberInfo where userId = #{userId}
	</select>

	<select id="selectAll"
		resultType="com.sb.mall.member.model.MemberInfo">
		select * from MemberInfo
	</select>

	<update id="updateMember"
		parameterType="com.sb.mall.member.model.MemberInfo">
		update MemberInfo
		<set>
			<if test="${userPw!=null}">
				userPw=#{userPw},
			</if>
			userName=#{userName}, address1=#{address1},
			address2=#{address2},zipCode=#{zipCode}, phone=#{phone},
			gradeNum=#{gradeNum}, point=#{point}, userAmount=#{userAmount}
		</set>
		where userId=#{userId}
	</update>

	<update id="updatePw"
		parameterType="com.sb.mall.member.model.MemberInfo">
		update MemberInfo set userPw=#{userPw} where
		userId=#{userId}
	</update>

	<delete id="delete" parameterType="String">
		delete from MemberInfo where
		userId = #{userId}
	</delete>

	<select id="selectCount" resultType="int">
		select count(*) from
		MemberInfo
	</select>

	<select id="selectList"
		resultType="com.sb.mall.member.model.MemberInfo">
		select * from
		MemberInfo order by userSeq desc limit
		#{param1},
		#{param2}
	</select>

	<select id="selectTodayList"
		resultType="com.sb.mall.member.model.MemberInfo">
		select * from
		MemberInfo where regDate = curDate() order by
		userSeq desc limit
		#{param1},
		#{param2}
	</select>

	<!--파라미터 타입은 입력값 ,리설트타입은 출력값 -->
	<select id="find_id" parameterType="String"
		resultType="com.sb.mall.member.model.MemberInfo">
		<!-- select userId from MemberInfo where username = #{userName} and phone 
			= #{phone} -->
		<!--여러개를 받아올때 param1 -->
		select * from MemberInfo where userName = #{param1} and phone =
		#{param2}
	</select>

	<!--비밀번호 찾기 -->
	<select id="find_pw" parameterType="String" resultType="String">
		select
		userPw from MemberInfo where userId = #{param1} and userName =
		#{param2}
	</select>

	<!--비밀번호 찾기 -->
	<select id="checkPw" parameterType="String" resultType="String">
		select
		userPw from MemberInfo where userId = #{id}
	</select>

	<!-- // 일반 주문 및 크라우드펀딩 주문 갯수 -->
	<select id="selectOrderDetailCount" resultType="int">
		select count(*) from
		(select
		od.orderDetailNum
		from ${tableName} od,
		MemberInfo mi,
		<if test="tableName == 'OrderDetail'">
			`Order` o, Goods g
		</if>
		<if test="tableName == 'CrowdOrderDetail'">
			CrowdOrder o, CrowdGoods g
		</if>
		where od.userSeq = mi.userSeq and
		od.orderDetailNum =
		o.orderDetailNum
		and o.goodsNo = g.goodsNo
		AND od.status <![CDATA[>=]]>
		1
		and od.orderDetailNum <![CDATA[<>]]>
		0
		and mi.userSeq = #{param2}
		group by od.orderDetailNum) R;
	</select>

	<!-- // 일반 주문 및 크라우드펀딩 주문 조회 -->
	<select id="selectOrderDetailVOList"
		resultType="com.sb.mall.admin.adminOrder.model.OrderDetailVO">
		select
		date_format(od.orderTime, '%Y-%m-%d') orderTime,
		od.orderDetailNum,
		concat(od.orderAddress1,
		od.orderAddress2) orderAddress,
		(case
		when
		count(g.goodsName) <![CDATA[>]]>
		1
		then concat(g.goodsName, ' 외 ',
		count(g.goodsName) -1)
		else g.goodsName
		end) goodsName,
		od.payment,
		od.status,
		od.totalAmount
		from ${tableName}
		od,
		MemberInfo mi,
		<if test="tableName == 'OrderDetail'">
			`Order` o, Goods g
		</if>
		<if test="tableName == 'CrowdOrderDetail'">
			CrowdOrder o, CrowdGoods g
		</if>
		where od.userSeq = mi.userSeq and
		od.orderDetailNum =
		o.orderDetailNum
		and o.goodsNo = g.goodsNo
		AND od.status <![CDATA[>=]]>
		1
		and od.orderDetailNum <![CDATA[<>]]>
		0
		and mi.userSeq = #{param2}
		group by od.orderDetailNum order by
		od.orderTime desc limit #{param3},
		#{param5};
	</select>
	
	<!-- 상세 상품 조회 -->
	<select id="selectOrderVOList"
		resultType="com.sb.mall.admin.adminOrder.model.OrderVO">
		SELECT
		o.orderDetailNum,
		o.orderSeq,
		g.goodsPhoto,
		g.goodsNo,
		g.goodsName,
		o.quantity,
		ifnull(go.opt1Name, '') opt1Name,
		ifnull(go.opt2Name, '') opt2Name,
		o.salePrice
		FROM
		<if test="tableName == 'OrderDetail'">
			`Order` o,
			Goods g,
			GoodsOption go
		</if>
		<if test="tableName == 'CrowdOrderDetail'">
			CrowdOrder o,
			CrowdGoods g,
			CrowdGoodsOption go
		</if>
		 MemberInfo	m,
		where o.goodsNo = g.goodsNo
		and
		o.userSeq = m.userSeq
		and
		o.optionSeq = go.optionSeq
		and
		orderDetailNum = #{param2};
	</select>
	
		<!-- 반품상태 업데이트 -->
	<update id="changeRefund">
		UPDATE `${param3}` SET
		`refund` = '${param2}'
		WHERE
		<foreach collection="orderArray" item="orderSeq" open="("
			close=")" separator=" OR ">
			`orderSeq` ='${orderSeq}'
		</foreach>
	</update>
</mapper>