<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sb.mall.order.dao.OrderDao">

	<insert id="insertCarts" statementType="CALLABLE">
		{ call insert_CartJson(#{orders}) }
	</insert>

	<insert id="insertOrderDetail" parameterType="com.sb.mall.order.model.OrderDetail">
		insert into `OrderDetail`(orderDetailNum,userSeq,payment,orderTime,status,totalAmount)
		value(#{orderDetailNum},#{userSeq},#{payment},now(),#{status},#{totalAmount})
	</insert>
	
	<!-- <insert id="insertOrder" parameterType="com.sb.mall.order.model.Order"
		useGeneratedKeys="true" keyProperty="orderSeq">
		insert into `Order`(orderDetailNum,userSeq,productSeq,quantity,`option`)
		value(#{orderDetailNum},#{userSeq},#{productSeq},#{quantity},#{option})
	</insert> -->
	
	<update id="updateOrders">
		update `Order` 
		<set>
		<foreach collection="list" item="orders" open="" separator="" close="" index="index">
			<if test="index==0">
				orderDetailNum=#{orders.orderDetailNum} 
			</if>
		</foreach>
		</set>
		<where>
		<foreach collection="list" item="orders" open="" separator="" close="" index="index">
			<if test="index==0">
				and userSeq=#{orders.userSeq} and orderDetailNum=0 and
			</if>
		</foreach>
		<foreach collection="list" item="orders" open="(" separator="or" close=")" index="index">
			productSeq=#{orders.productSeq} and `option`=#{orders.option}
		</foreach>
		</where>
	</update>

	<!-- <update id="updateDuplicateCart" parameterType="com.sb.mall.order.model.Order">
		update `Order`set quantity=quantity+#{quantity}, salePrice=salePrice+#{salePrice} 
		where userSeq=#{userSeq} and productSeq=#{productSeq} and `option`=#{option}
		and orderDetailNum=0
	</update> -->

	<update id="updateUserPoint">
		update MemberInfo m,Grade g
		<set>
			m.point=m.point+${param1}*g.percent,
			m.userAmount=m.userAmount+${param1},
			m.gradeNum=
			(select ifnull(max(gradeNum),0) from Grade where <![CDATA[amount<=m.userAmount]]>)
		</set>
		<where>
			userSeq=#{param2} and m.gradeNum=g.gradeNum
		</where>
	</update>

<!-- 	<update id="update" parameterType="com.sb.mall.order.model.Order">
	</update> -->

	<!-- <update id="updateStatus" parameterType="Map">
	</update> -->
	
	<delete id="deleteCarts" >
		delete from `Order` 
		<where>
		<foreach collection="list" item="orders" open="" separator="" close="" index="index">
			<if test="index==0">
				userSeq=#{orders.userSeq} and orderDetailNum=0 and
			</if>
		</foreach>
		<foreach collection="list" item="orders" open="(" separator="or" close=")" index="index">
			goodsNo=#{orders.goodsNo} and optionSeq=#{orders.optionSeq}
		</foreach>
		</where>
	</delete>
	
<!-- 	<select id="checkDuplicateCart" 
	parameterType="com.sb.mall.order.model.Order" resultType="com.sb.mall.order.model.Order" >
		SELECT * FROM `Order` where 
		OrderDetailNum=0 and userSeq=#{userSeq} and productSeq=#{productSeq} and `option`=#{option}
	</select> -->

	<select id="selectCarts" resultType="map">
		SELECT * FROM `Order` o, Goods g, GoodsOption go, Product p
		<where>
		o.userSeq=#{param1} and o.orderDetailNum=0 
		and o.goodsNo=g.goodsNo and g.productSeq=p.productSeq and o.optionSeq=go.optionSeq;
		</where>
	</select>
	
	<select id="selectCartForOrder" resultType="map">
		SELECT * FROM `Order` o, Product p where
		<foreach collection="list" item="orders" open="(" separator="or" close=")">
			o.userSeq=#{orders.userSeq} 
			and o.productSeq=#{orders.productSeq} 
			and o.option=#{orders.option} 
		</foreach>
		and OrderDetailNum=0 and p.productSeq=o.productSeq
	</select>
	
	<select id="selectOrderAndProduct" resultType="map">
		SELECT * FROM `Order` o, Product p where o.productSeq=#{productSeq}
		and p.productSeq=o.productSeq
	</select>
	
	<select id="selectProduct" resultType="com.sb.mall.store.model.Product">
		SELECT * FROM Product where productSeq=#{productSeq}
	</select>

	<select id="select" resultType="com.sb.mall.order.model.Order"
		parameterType="String">
		select * from `Order` where orderDetailNum = #{orderDetailNum}
	</select>

</mapper>